//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_TeleportUp;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Boolean p_default_TeleportDown;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_oculus_LeftJoystick;
        
        private static SteamVR_Action_Boolean p_oculus_ButtonA;
        
        private static SteamVR_Action_Boolean p_oculus_ButtonB;
        
        private static SteamVR_Action_Boolean p_oculus_RightGrabGrip;
        
        private static SteamVR_Action_Boolean p_oculus_ButtonX;
        
        private static SteamVR_Action_Boolean p_oculus_ButtonY;
        
        private static SteamVR_Action_Boolean p_oculus_RightGrabPinch;
        
        private static SteamVR_Action_Boolean p_oculus_RightJoystickWest;
        
        private static SteamVR_Action_Boolean p_oculus_RightJoystickEast;
        
        private static SteamVR_Action_Boolean p_tracker_Trigger;
        
        private static SteamVR_Action_Boolean p_tracker_Grip;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TeleportUp
        {
            get
            {
                return SteamVR_Actions.p_default_TeleportUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TeleportDown
        {
            get
            {
                return SteamVR_Actions.p_default_TeleportDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 oculus_LeftJoystick
        {
            get
            {
                return SteamVR_Actions.p_oculus_LeftJoystick.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_ButtonA
        {
            get
            {
                return SteamVR_Actions.p_oculus_ButtonA.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_ButtonB
        {
            get
            {
                return SteamVR_Actions.p_oculus_ButtonB.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_RightGrabGrip
        {
            get
            {
                return SteamVR_Actions.p_oculus_RightGrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_ButtonX
        {
            get
            {
                return SteamVR_Actions.p_oculus_ButtonX.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_ButtonY
        {
            get
            {
                return SteamVR_Actions.p_oculus_ButtonY.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_RightGrabPinch
        {
            get
            {
                return SteamVR_Actions.p_oculus_RightGrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_RightJoystickWest
        {
            get
            {
                return SteamVR_Actions.p_oculus_RightJoystickWest.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean oculus_RightJoystickEast
        {
            get
            {
                return SteamVR_Actions.p_oculus_RightJoystickEast.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean tracker_Trigger
        {
            get
            {
                return SteamVR_Actions.p_tracker_Trigger.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean tracker_Grip
        {
            get
            {
                return SteamVR_Actions.p_tracker_Grip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_TeleportUp,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_TeleportDown,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.oculus_LeftJoystick,
                    SteamVR_Actions.oculus_ButtonA,
                    SteamVR_Actions.oculus_ButtonB,
                    SteamVR_Actions.oculus_RightGrabGrip,
                    SteamVR_Actions.oculus_ButtonX,
                    SteamVR_Actions.oculus_ButtonY,
                    SteamVR_Actions.oculus_RightGrabPinch,
                    SteamVR_Actions.oculus_RightJoystickWest,
                    SteamVR_Actions.oculus_RightJoystickEast,
                    SteamVR_Actions.tracker_Trigger,
                    SteamVR_Actions.tracker_Grip};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_TeleportUp,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_TeleportDown,
                    SteamVR_Actions.oculus_LeftJoystick,
                    SteamVR_Actions.oculus_ButtonA,
                    SteamVR_Actions.oculus_ButtonB,
                    SteamVR_Actions.oculus_RightGrabGrip,
                    SteamVR_Actions.oculus_ButtonX,
                    SteamVR_Actions.oculus_ButtonY,
                    SteamVR_Actions.oculus_RightGrabPinch,
                    SteamVR_Actions.oculus_RightJoystickWest,
                    SteamVR_Actions.oculus_RightJoystickEast,
                    SteamVR_Actions.tracker_Trigger,
                    SteamVR_Actions.tracker_Grip};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_TeleportUp,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_TeleportDown,
                    SteamVR_Actions.oculus_ButtonA,
                    SteamVR_Actions.oculus_ButtonB,
                    SteamVR_Actions.oculus_RightGrabGrip,
                    SteamVR_Actions.oculus_ButtonX,
                    SteamVR_Actions.oculus_ButtonY,
                    SteamVR_Actions.oculus_RightGrabPinch,
                    SteamVR_Actions.oculus_RightJoystickWest,
                    SteamVR_Actions.oculus_RightJoystickEast,
                    SteamVR_Actions.tracker_Trigger,
                    SteamVR_Actions.tracker_Grip};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.oculus_LeftJoystick};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_TeleportUp,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_TeleportDown,
                    SteamVR_Actions.oculus_LeftJoystick,
                    SteamVR_Actions.oculus_ButtonA,
                    SteamVR_Actions.oculus_ButtonB,
                    SteamVR_Actions.oculus_RightGrabGrip,
                    SteamVR_Actions.oculus_ButtonX,
                    SteamVR_Actions.oculus_ButtonY,
                    SteamVR_Actions.oculus_RightGrabPinch,
                    SteamVR_Actions.oculus_RightJoystickWest,
                    SteamVR_Actions.oculus_RightJoystickEast,
                    SteamVR_Actions.tracker_Trigger,
                    SteamVR_Actions.tracker_Grip};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_TeleportUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TeleportUp")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_TeleportDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TeleportDown")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_oculus_LeftJoystick = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/oculus/in/LeftJoystick")));
            SteamVR_Actions.p_oculus_ButtonA = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/ButtonA")));
            SteamVR_Actions.p_oculus_ButtonB = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/ButtonB")));
            SteamVR_Actions.p_oculus_RightGrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/RightGrabGrip")));
            SteamVR_Actions.p_oculus_ButtonX = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/ButtonX")));
            SteamVR_Actions.p_oculus_ButtonY = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/ButtonY")));
            SteamVR_Actions.p_oculus_RightGrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/RightGrabPinch")));
            SteamVR_Actions.p_oculus_RightJoystickWest = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/RightJoystickWest")));
            SteamVR_Actions.p_oculus_RightJoystickEast = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/oculus/in/RightJoystickEast")));
            SteamVR_Actions.p_tracker_Trigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/tracker/in/Trigger")));
            SteamVR_Actions.p_tracker_Grip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/tracker/in/Grip")));
        }
    }
}
